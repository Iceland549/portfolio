[
  {
    "id": 1,
    "title": "MagicTheBeginning (MTB)",
    "description": "Plateforme de jeu de cartes en architecture microservices avec authentification JWT sécurisée, gestion de decks/cartes, sessions de jeu et IA basique en cours de développement. Intégration SQL Server (auth) et MongoDB (data). Conteneurisation et orchestration via Docker Compose. Tests unitaires couvrant cas clés (auth, validation decks).",
    "technologies": "C#, .NET 8, JWT, EF Core, SQL Server, MongoDB, Ocelot Gateway, Docker, xUnit",
    "highlights": "4 microservices interconnectés ; Auth service-to-service ; CI/CD potentiel ; Couverture tests ~40% ; Scalable pour multi-joueurs.",
    "link": "https://github.com/Iceland549/MagicTheBeginning_clone"
  },
  {
    "id": 2,
    "title": "API REST Sécurisée (OpenClassrooms)",
    "description": "API backend pour gestion de ressources sécurisée avec authentification JWT, CRUD opérations, et autorisations basées sur rôles. Documentation Swagger et intégration base de données.",
    "technologies": "C#, .NET Core, JWT, Swagger, EF Core",
    "highlights": "Gestion tokens refresh ; Validation inputs ; Performances optimisées.",
    "link": "https://github.com/Iceland549/findexium_P7"
  },
  {
    "id": 3,
    "title": "NexaWorks - Gestion des problèmes logiciels (OpenClassrooms)",
    "description": "Base de données relationnelle pour le suivi des tickets logiciels à travers produits, versions et OS. Modèle EA complet, scripts SQL pour création et insertion, documentation technique fournie.",
    "technologies": "SQL Server, SSMS, Modélisation EA, Scripts SQL",
    "highlights": "Modèle relationnel robuste ; Tables de jonction ; 25 tickets d'exemple ; Documentation PDF incluse.",
    "link": "https://github.com/Iceland549/nexaworks"
  },
  {
    "id": 4,
    "title": "TourGuide - Application distribuée haute performance (OpenClassrooms)",
    "description": "Application touristique distribuée avec services modulaires (GPS, récompenses, tarification). Tests de charge jusqu’à 100 000 utilisateurs, calculs géographiques, attribution de points, CI/CD GitHub Actions, Swagger intégré.",
    "technologies": "C#, .NET 8, DI, Interfaces, Services, GitHub Actions, Swagger",
    "highlights": "Architecture modulaire ; Scalabilité testée ; Calculs géographiques ; Répartition des responsabilités ; Documentation technique complète.",
    "link": "https://github.com/Iceland549/dotnet_tourguidep8"
  },
  {
    "id": 5,
    "title": "Testez l'implémentation d'une nouvelle fonctionnalité .NET (OpenClassrooms)",
    "description": "Projet de test et intégration d'une nouvelle fonctionnalité dans une application .NET existante. Utilisation de tests unitaires et d'intégration pour évaluer et corriger la qualité du code. Durée : 60 heures supervisées.",
    "technologies": "C#, .NET Core, Tests unitaires (xUnit ou MSTest), Tests d'intégration, Entity Framework Core",
    "highlights": "Implémentation tests unitaires pour nouvelle fonctionnalité ; Correction code basée sur résultats tests ; Amélioration qualité et robustesse application.",
    "link": "https://github.com/Iceland549/P3_Tests"
  }
]
